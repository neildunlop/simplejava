---
#define the resources that are available as inputs to jobs.
resources:
#GitHub repository that holds all the code that makes up our application
  - name: git-repo
    type: git
    source:
      uri: {{github-uri}}
      branch: {{github-branch}}

#S3 Bucket that holds our application version number information - gets updated when we build a release candidate - How do we keep this in line with the actual code?
  - name: version
    type: semver
    source:
      bucket: {{s3-versions-bucket}}
      initial_version: 1.0.0-rc.0
      key: current-version
      access_key_id: {{s3-access-key-id}}
      secret_access_key: {{s3-secret-access-key}}
      endpoint: {{s3-endpoint}}
      region_name: Ireland
    
  #This is how we tell concourse where we want to push candidate releases (ie, builds that have passed unit testing and are ready to have
  #integration tests run on it - but I'm too tired to try it out...not setup s3 yet..)    
  - name: candidate-release
    type: s3
    source:
      bucket: {{s3-release-candidates-bucket}}
      regexp: simplejava-(.*).jar
      access_key_id: {{s3-access-key-id}}
      secret_access_key: {{s3-secret-access-key}}
      endpoint: {{s3-endpoint}}
      region_name: Ireland


#The things that we want our concourse server to do.
jobs:
  - name: unit-test
    public: true
    plan:
      - get: git-repo
        trigger: true
      - task: unit
        file: git-repo/build/tasks/task-unit-test.yml
        params: &MAVENPARAMS
          MAVEN_OPTS: {{maven-opts}}
          MAVEN_CONFIG: {{maven-config}}

  - name: build-artifact
    serial_groups: [ version ]
    plan:
      - get: git-repo
        passed: [ unit-test ]
        trigger: true
      - get: version
        params: { pre: rc }
      - task: build
        file: git-repo/build/tasks/build.yml
        params:
          <<: *MAVENPARAMS
      - put: candidate-release
        params: { file: build/simplejava-*.jar }
      - put: version
        params: { file: version/number }